// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/grpc/proto/service/kiosk.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	models "github.com/mjudeikis/unikiosk/pkg/grpc/models"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartKioskResponse struct {
	State                *models.KioskState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Error                *models.Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StartKioskResponse) Reset()         { *m = StartKioskResponse{} }
func (m *StartKioskResponse) String() string { return proto.CompactTextString(m) }
func (*StartKioskResponse) ProtoMessage()    {}
func (*StartKioskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ba2961ef98e8275, []int{0}
}

func (m *StartKioskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartKioskResponse.Unmarshal(m, b)
}
func (m *StartKioskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartKioskResponse.Marshal(b, m, deterministic)
}
func (m *StartKioskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartKioskResponse.Merge(m, src)
}
func (m *StartKioskResponse) XXX_Size() int {
	return xxx_messageInfo_StartKioskResponse.Size(m)
}
func (m *StartKioskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartKioskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartKioskResponse proto.InternalMessageInfo

func (m *StartKioskResponse) GetState() *models.KioskState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *StartKioskResponse) GetError() *models.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*StartKioskResponse)(nil), "service.StartKioskResponse")
}

func init() {
	proto.RegisterFile("pkg/grpc/proto/service/kiosk.proto", fileDescriptor_2ba2961ef98e8275)
}

var fileDescriptor_2ba2961ef98e8275 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x31, 0x0b, 0xc2, 0x30,
	0x14, 0x84, 0xa9, 0x50, 0x85, 0xa8, 0x20, 0x6f, 0x2a, 0x75, 0xd1, 0xba, 0x74, 0x4a, 0xa0, 0x2e,
	0xce, 0x82, 0x20, 0xb8, 0xb5, 0x9b, 0x5b, 0xad, 0x8f, 0x52, 0xaa, 0x26, 0xbc, 0x17, 0xfc, 0xfd,
	0xd2, 0xa4, 0x8a, 0x68, 0xd7, 0xbb, 0xef, 0x8e, 0x3b, 0x91, 0x98, 0xb6, 0x56, 0x35, 0x99, 0x4a,
	0x19, 0xd2, 0x56, 0x2b, 0x46, 0x7a, 0x36, 0x15, 0xaa, 0xb6, 0xd1, 0xdc, 0x4a, 0xa7, 0xc1, 0xa4,
	0x17, 0xe3, 0xf5, 0x0f, 0x7c, 0xd7, 0x57, 0xbc, 0xf1, 0x37, 0x1b, 0x27, 0xc3, 0x08, 0x12, 0x69,
	0x62, 0xcf, 0x24, 0x95, 0x80, 0xc2, 0x96, 0x64, 0x4f, 0x5d, 0x2e, 0x47, 0x36, 0xfa, 0xc1, 0x08,
	0xa9, 0x08, 0xd9, 0x96, 0x16, 0xa3, 0x60, 0x15, 0xa4, 0xd3, 0x0c, 0xa4, 0x8f, 0x4a, 0x47, 0x15,
	0x9d, 0x93, 0x7b, 0x00, 0x36, 0x22, 0x74, 0x7d, 0xd1, 0xc8, 0x91, 0xf3, 0x37, 0x79, 0xe8, 0xc4,
	0xdc, 0x7b, 0xd9, 0x51, 0xcc, 0x7c, 0xd2, 0x6f, 0x87, 0x9d, 0xab, 0x27, 0x0b, 0x03, 0xc5, 0xf1,
	0x52, 0xf6, 0x17, 0xe5, 0xff, 0xb0, 0x3d, 0x9c, 0x17, 0x9f, 0x53, 0x3d, 0x76, 0x19, 0xbb, 0x27,
	0xdb, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xef, 0x5a, 0xef, 0x64, 0x3f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KioskServiceClient is the client API for KioskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KioskServiceClient interface {
	Start(ctx context.Context, in *models.KioskState, opts ...grpc.CallOption) (*StartKioskResponse, error)
}

type kioskServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewKioskServiceClient(cc grpc.ClientConnInterface) KioskServiceClient {
	return &kioskServiceClient{cc}
}

func (c *kioskServiceClient) Start(ctx context.Context, in *models.KioskState, opts ...grpc.CallOption) (*StartKioskResponse, error) {
	out := new(StartKioskResponse)
	err := c.cc.Invoke(ctx, "/service.KioskService/start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KioskServiceServer is the server API for KioskService service.
type KioskServiceServer interface {
	Start(context.Context, *models.KioskState) (*StartKioskResponse, error)
}

// UnimplementedKioskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedKioskServiceServer struct {
}

func (*UnimplementedKioskServiceServer) Start(ctx context.Context, req *models.KioskState) (*StartKioskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}

func RegisterKioskServiceServer(s *grpc.Server, srv KioskServiceServer) {
	s.RegisterService(&_KioskService_serviceDesc, srv)
}

func _KioskService_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(models.KioskState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KioskServiceServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.KioskService/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KioskServiceServer).Start(ctx, req.(*models.KioskState))
	}
	return interceptor(ctx, in, info, handler)
}

var _KioskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.KioskService",
	HandlerType: (*KioskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "start",
			Handler:    _KioskService_Start_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/grpc/proto/service/kiosk.proto",
}
